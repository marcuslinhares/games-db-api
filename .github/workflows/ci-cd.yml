name: Build e Deploy

on:
  push:
    branches: ["main"]
    
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: gamesdb-api
  IMAGE_TAG: latest
  SERVICE_NAME: gamesdb-api
  CONTAINER_PORT: 8081
  HOST_PORT: 8081

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do c√≥digo
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package -DskipTests --file pom.xml

    - name: Login no GHCR com token pessoal
      run: echo "${{ secrets.GHCR_TOKEN }}" | docker login $REGISTRY -u ${{ github.repository_owner }} --password-stdin
      env:
        CR_PAT: ${{ secrets.GHCR_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build da imagem Docker
      run: |
        docker buildx build -t $REGISTRY/${{ github.repository_owner }}/$IMAGE_NAME:$IMAGE_TAG \
          --build-arg DB_URL="${{ secrets.DB_URL }}" \
          --build-arg DB_USERNAME="${{ secrets.DB_USERNAME }}" \
          --build-arg DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
          --build-arg AMBIENTE="${{ secrets.AMBIENTE }}" \
          --build-arg PRODURL="${{ secrets.PRODURL }}" \
          --load .
        docker push $REGISTRY/${{ github.repository_owner }}/$IMAGE_NAME:$IMAGE_TAG

    - name: SSH na VPS e fazer deploy com Docker Swarm
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: 22
        envs: REGISTRY,IMAGE_NAME,IMAGE_TAG,SERVICE_NAME,CONTAINER_PORT,HOST_PORT
        script: |
          echo ${{ secrets.GHCR_TOKEN }} | docker login $REGISTRY -u ${{ github.repository_owner }} --password-stdin && docker pull $REGISTRY/${{ github.repository_owner }}/$IMAGE_NAME:$IMAGE_TAG
    
          docker service rm $SERVICE_NAME || true
    
          docker service create \
            --name $SERVICE_NAME \
            --replicas 1 \
            --publish "$HOST_PORT:$CONTAINER_PORT" \
            --env DB_URL="${{ secrets.DB_URL }}" \
            --env DB_USERNAME="${{ secrets.DB_USERNAME }}" \
            --env DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
            --env AMBIENTE="${{ secrets.AMBIENTE }}" \
            --env PRODURL="${{ secrets.PRODURL }}" \
            $REGISTRY/${{ github.repository_owner }}/$IMAGE_NAME:$IMAGE_TAG

    - name: Dispara webhook de deploy na vps secundaria
      run: |
        curl -X POST http://204.12.199.113:3000/api/deploy/BRORMyyDPJSRteaYdYt84
